{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/Search-card/searchCards.components.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","react_default","a","createElement","className","src","concat","monsterCard","id","alt","name","email","CardList","monsters","map","monster","card_component","key","SearchCards","_ref","placeholder","handleSearch","searchField","type","value","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","e","setState","target","state","_this2","fetch","then","response","json","users","_this$state","filterMonster","filter","toLowerCase","includes","searchCards_components","card_list_component","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"wRAceA,qBAXF,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GAEVG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAG,wBAAAC,OAA0BR,EAAMS,YAAYC,GAA5C,0BAAwEC,IAAI,YACtFR,EAAAC,EAAAC,cAAA,UAAKL,EAAMS,YAAYG,MACvBT,EAAAC,EAAAC,cAAA,SAAIL,EAAMS,YAAYI,UCKbC,EAVE,SAACd,GAClB,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVN,EAAMe,SAASC,IAAI,SAACC,GAAD,OAChBd,EAAAC,EAAAC,cAACa,EAAD,CAAMC,IAAKF,EAAQP,GAAID,YAAaQ,QCQjCG,SAbK,SAAAC,GAA6C,IAA3CC,EAA2CD,EAA3CC,YAAaC,EAA8BF,EAA9BE,aAAaC,EAAiBH,EAAjBG,YAE9C,OACErB,EAAAC,EAAAC,cAAA,SACAC,UAAU,SACRmB,KAAK,SACLH,YAAaA,EACbI,MAAOF,EACPG,SAAUJ,MCqCDK,cA1Cb,SAAAA,EAAY5B,GAAO,IAAA6B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMhC,KAcRuB,aAAe,SAACa,GACdP,EAAKQ,SAAS,CACZb,YAAaY,EAAEE,OAAOZ,SAdxBG,EAAKU,MAAQ,CACXxB,SAAU,GACVS,YAAa,IALEK,mFASC,IAAAW,EAAAR,KAClBS,MAAM,8CACHC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACG,GAAD,OAAWL,EAAKH,SAAS,CAAEtB,SAAU8B,uCAStC,IAAAC,EAC2Bd,KAAKO,MAA/BxB,EADD+B,EACC/B,SAAUS,EADXsB,EACWtB,YACZuB,EAAgBhC,EAASiC,OAAO,SAAC/B,GAAD,OACpCA,EAAQL,KAAKqC,cAAcC,SAAS1B,EAAYyB,iBAGlD,OACE9C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAC8C,EAAD,CACE5B,aAAcS,KAAKT,aACnBD,YAAY,kBACZI,MAASM,KAAKO,MAAMf,cAGtBrB,EAAAC,EAAAC,cAAC+C,EAAD,CAAUrC,SAAUgC,YArCVM,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAArB,EAAA,GAAAM,KAAAe,EAAAC,KAAA,UAAqBhB,KAAK,SAAArB,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHjE,EAAAC,EAAAC,cAACF,EAAAC,EAAMiE,WAAP,KACElE,EAAAC,EAAAC,cAACiE,EAAD,QAOJhB","file":"static/js/main.93e4e7de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport   './card.style.css';\r\n\r\nconst Card = (props) => {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"card-container\">\r\n        <img src={`https://robohash.org/${props.monsterCard.id}?set=set2&size=130x130`} alt=\"monster\"  />\r\n      <h2>{props.monsterCard.name}</h2>\r\n      <p>{props.monsterCard.email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport  './card-list.style.css';\r\nimport Card from \"../card/card.component\";\r\n\r\nconst CardList = (props) => {\r\nreturn(\r\n    <div className=\"card-list\">\r\n        {props.monsters.map((monster) => (\r\n            <Card key={monster.id} monsterCard={monster} />\r\n          ))}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default CardList;","import React from \"react\";\r\nimport \"./searchCards.styles.css\";\r\n\r\nconst SearchCards = ({placeholder ,handleSearch,searchField}) => {\r\n\r\n  return (\r\n    <input\r\n    className=\"search\"\r\n      type=\"search\"\r\n      placeholder={placeholder}\r\n      value={searchField}\r\n      onChange={handleSearch}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchCards;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport CardList from \"./component/card-list/card-list.component.jsx\";\nimport SearchCards from \"./component/Search-card/searchCards.components\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  handleSearch = (e) => {\n    this.setState({\n      searchField: e.target.value,\n    });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filterMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchCards\n          handleSearch={this.handleSearch}\n          placeholder=\"Search Monsters\"\n          value = {this.state.searchField}\n        />\n\n        <CardList monsters={filterMonster} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}